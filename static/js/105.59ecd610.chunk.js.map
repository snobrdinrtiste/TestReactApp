{"version":3,"sources":["views/CDF/cdf.js"],"names":["CONTAINER","styled","div","formValidationSchema","Yup","shape","srtype","required","namefirst","min","max","namelast","email","address","phone","matches","itemlocation","itemslist","comment","url","CDF","md","accentColor","initialValues","creationdate","billing","district","collectionday","validationSchema","onSubmit","values","setSubmitting","resetForm","setTimeout","alert","JSON","stringify","errors","touched","setFieldValue","handleChange","handleBlur","handleSubmit","isSubmitting","className","Group","controlId","Label","Control","type","name","value","moment","format","disabled","as","onChange","onBlur","placeholder","e","target","trim","axios","get","then","response","console","log","data","candidates","attributes","LASAN_YARD","Refuse_Collection_Day","validateAddress","containerserial","containersize","srnum","agentforward","style","float","variant"],"mappings":"qUAqBMA,EAAYC,IAAOC,IAAV,2nBAkDf,IAGMC,EAAuBC,MAAaC,MAAM,CAC5CC,OAAQF,MACHG,SAAS,4BACdC,UAAWJ,MACNK,IAAI,EAAG,+CACPC,IAAI,IAAK,mDACTH,SAAS,2BACdI,SAAUP,MACLK,IAAI,EAAG,8CACPC,IAAI,IAAK,kDACTH,SAAS,0BACdK,MAAOR,MACFQ,MAAM,kCACNF,IAAI,IAAK,2CACTH,SAAS,sBACdM,QAAST,MACJK,IAAI,GAAI,6CACRF,SAAS,wBAUdO,MAAOV,MACFW,QA/BW,sDA+BU,8BACrBR,SAAS,0BACdS,aAAcZ,MACTG,SAAS,0CACdU,UAAWb,MACNK,IAAI,EAAG,0CACPF,SAAS,6CACdW,QAASd,MACJe,IAAI,oDACJZ,SAAS,mBAgYHa,UA5XH,WACR,OACI,cAACpB,EAAD,UACI,cAAC,KAAD,UACI,cAAC,IAAD,CAAMqB,GAAG,KAAT,SACI,eAAC,IAAD,CAAOC,YAAY,UAAnB,UACI,cAAC,IAAD,UACI,gEAEJ,cAAC,IAAD,UACI,cAAC,IAAD,CACIC,cAAe,CAAEC,aAAc,GAAIC,QAAS,GAAId,SAAS,GAAIH,UAAU,GACtDI,MAAM,GAAIC,QAAQ,GAAIa,SAAS,GAAIC,cAAc,GACjDb,MAAM,GAAIE,aAAa,GAAIC,UAAU,GAAIC,QAAQ,IAClEU,iBAAkBzB,EAClB0B,SAAU,SAACC,EAAD,GAAyC,IAA/BC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,UAE/BD,GAAc,GAGdE,YAAW,WACPC,MAAMC,KAAKC,UAAUN,EAAQ,KAAM,IACnCE,IACAD,GAAc,KACf,MAdX,SAkBK,gBAAGD,EAAH,EAAGA,OACAO,EADH,EACGA,OACAC,EAFH,EAEGA,QACAC,EAHH,EAGGA,cACAC,EAJH,EAIGA,aACAC,EALH,EAKGA,WACAC,EANH,EAMGA,aACAC,EAPH,EAOGA,aAPH,OAQG,eAAC,IAAD,CAAMd,SAAUa,EAAhB,UACKP,KAAKC,UAAUN,GAChB,eAAC,KAAD,CAAMc,UAAU,aAAhB,UACI,cAAC,IAAD,UACI,eAAC,IAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAAC,IAAKC,MAAN,CAAYH,UAAU,aAAtB,kBACA,cAAC,IAAKI,QAAN,CACIC,KAAK,OACLC,KAAK,eACLC,MAAOrB,EAAON,aA5GhD4B,MAASC,OAAO,uBA6GkBC,UAAQ,SAGpB,cAAC,IAAD,UACI,eAAC,IAAKT,MAAN,CAAYC,UAAU,aAAtB,UACI,cAAC,IAAKC,MAAN,CAAYH,UAAU,aAAtB,qBAICN,EAAQhC,QAAU+B,EAAO/B,OACtB,qBAAKsC,UAAU,gBAAf,SAAgCP,EAAO/B,SACzC,KACF,eAAC,IAAK0C,QAAN,CACIO,GAAG,SAEHL,KAAK,SAELM,SAAUhB,EAEViB,OAAQhB,EAERU,MAAOrB,EAAOxB,OAEdsC,UAAWN,EAAQhC,QAAU+B,EAAO/B,OAAS,QAAU,KAX3D,UAaI,2BACA,wBAAQ6C,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,YAAd,wBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,yBAAd,oCACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,mBAAd,8BACA,wBAAQA,MAAM,qBAAd,gCACA,wBAAQA,MAAM,MAAd,yBAIZ,cAAC,IAAD,UACI,eAAC,IAAKN,MAAN,CAAYC,UAAU,cAAtB,UACA,cAAC,IAAKC,MAAN,CAAYH,UAAU,aAAtB,qBACA,eAAC,IAAKI,QAAN,CACQO,GAAG,SAEHL,KAAK,UAELM,SAAUhB,EAEViB,OAAQhB,EAERU,MAAOrB,EAAOL,QATtB,UAWQ,2BACA,wBAAQ0B,MAAM,SAAd,+BAKhB,eAAC,KAAD,CAAMP,UAAU,aAAhB,UACI,cAAC,IAAD,UACI,eAAC,IAAKC,MAAN,CAAYC,UAAU,gBAAtB,UACI,cAAC,IAAKC,MAAN,kCAECT,EAAQ9B,WAAa6B,EAAO7B,UACzB,qBAAKoC,UAAU,gBAAf,SAAgCP,EAAO7B,YACxC,KACH,cAAC,IAAKwC,QAAN,CACIG,MAAOrB,EAAOtB,UACdyC,KAAK,OAELC,KAAK,YACLQ,YAAY,aAEZF,SAAUhB,EAEViB,OAAQhB,EAGRG,UAAWN,EAAQ9B,WAAa6B,EAAO7B,UAAY,QAAU,YAIzE,cAAC,IAAD,UACI,eAAC,IAAKqC,MAAN,CAAYC,UAAU,eAAtB,UACI,cAAC,IAAKC,MAAN,iCAECT,EAAQ3B,UAAY0B,EAAO1B,SACxB,qBAAKiC,UAAU,gBAAf,SAAgCP,EAAO1B,WACxC,KACH,cAAC,IAAKqC,QAAN,CACIC,KAAK,OAELC,KAAK,WACLQ,YAAY,YAEZF,SAAUhB,EAEViB,OAAQhB,EAERU,MAAOrB,EAAOnB,SAEdiC,UAAWN,EAAQ3B,UAAY0B,EAAO1B,SAAW,QAAU,eAK3E,eAAC,KAAD,CAAMiC,UAAU,aAAhB,UACI,cAAC,IAAD,UACI,eAAC,IAAKC,MAAN,CAAYC,UAAU,YAAtB,UACI,cAAC,IAAKC,MAAN,6BACCT,EAAQ1B,OAASyB,EAAOzB,MACrB,qBAAKgC,UAAU,gBAAf,SAAgCP,EAAOzB,QACxC,KACH,cAAC,IAAKoC,QAAN,CACIC,KAAK,OACLC,KAAK,QACLQ,YAAY,QACZF,SAAUhB,EACViB,OAAQhB,EACRU,MAAOrB,EAAOlB,MACdgC,UAAWN,EAAQ1B,OAASyB,EAAOzB,MAAQ,QAAU,YAIjE,cAAC,IAAD,UACI,eAAC,IAAKiC,MAAN,CAAYC,UAAU,YAAtB,UACI,cAAC,IAAKC,MAAN,6BACCT,EAAQxB,OAASuB,EAAOvB,MACrB,qBAAK8B,UAAU,gBAAf,SAAgCP,EAAOvB,QACxC,KACH,cAAC,IAAKkC,QAAN,CACIC,KAAK,OACLC,KAAK,QACLQ,YAAY,QACZF,SAAUhB,EACViB,OAAQhB,EACRU,MAAOrB,EAAOhB,MACd8B,UAAWN,EAAQxB,OAASuB,EAAOvB,MAAQ,QAAU,eAKrE,cAAC,KAAD,CAAM8B,UAAU,aAAhB,SACI,cAAC,IAAD,UACI,eAAC,IAAKC,MAAN,CAAYC,UAAU,WAAtB,UACI,cAAC,IAAKC,MAAN,+BACCT,EAAQzB,SAAWwB,EAAOxB,QACvB,qBAAK+B,UAAU,gBAAf,SAAgCP,EAAOxB,UACxC,KACH,cAAC,IAAKmC,QAAN,CACIC,KAAK,OACLC,KAAK,UACLQ,YAAY,UACZF,SAAUhB,EACViB,OAAQ,SAAAE,GACJlB,EAAWkB,GAvQvE,SAAyBA,EAAGpB,GACM,qBAAnBoB,EAAEC,OAAOT,OACc,KAA1BQ,EAAEC,OAAOT,MAAMU,QACfC,IAAMC,IACF,gKAAkKJ,EAAEC,OAAOT,MAAQ,2DACrLa,MAAK,SAACC,GACJC,QAAQC,IAAIhC,KAAKC,UAAU6B,IAC3B1B,EAAc,WAAY0B,EAASG,KAAKC,WAAW,GAAGC,WAAWC,YACjEhC,EAAc,gBAAiB0B,EAASG,KAAKC,WAAW,GAAGC,WAAWE,0BAgQ1BC,CAAgBd,EAAGpB,IAEvBY,MAAOrB,EAAOjB,QACd+B,UAAWN,EAAQzB,SAAWwB,EAAOxB,QAAU,QAAU,cAKzE,eAAC,KAAD,CAAM+B,UAAU,aAAhB,UACI,cAAC,IAAD,UACI,eAAC,IAAKC,MAAN,CAAYC,UAAU,eAAtB,UACI,cAAC,IAAKC,MAAN,CAAYH,UAAU,aAAtB,sBACA,cAAC,IAAKI,QAAN,CAAcE,KAAK,WAAWC,MAAOrB,EAAOJ,SAAU4B,UAAQ,SAGtE,cAAC,IAAD,UACI,eAAC,IAAKT,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAAC,IAAKC,MAAN,CAAYH,UAAU,aAAtB,4BACA,cAAC,IAAKI,QAAN,CAAcE,KAAK,gBAAgBC,MAAOrB,EAAOH,cAAe2B,UAAQ,YAIpF,eAAC,KAAD,CAAMV,UAAU,aAAhB,UACI,cAAC,IAAD,UACI,eAAC,IAAKC,MAAN,CAAYC,UAAU,mBAAtB,UACI,cAAC,IAAKC,MAAN,CAAYH,UAAU,aAAtB,2BAECN,EAAQtB,cAAgBqB,EAAOrB,aAC5B,qBAAK4B,UAAU,gBAAf,SAAgCP,EAAOrB,eACxC,KACH,eAAC,IAAKgC,QAAN,CACIO,GAAG,SAEHL,KAAK,eAELM,SAAUhB,EAEViB,OAAQhB,EAERU,MAAOrB,EAAOd,aAEd4B,UAAWN,EAAQtB,cAAgBqB,EAAOrB,aAAe,QAAU,KAXvE,UAaI,2BACA,wBAAQmC,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,SAAd,4BAIZ,cAAC,IAAD,UACI,eAAC,IAAKN,MAAN,CAAYC,UAAU,gBAAtB,UACI,cAAC,IAAKC,MAAN,CAAYH,UAAU,aAAtB,mCACCN,EAAQrB,WAAaoB,EAAOpB,UACzB,qBAAK2B,UAAU,gBAAf,SAAgCP,EAAOpB,YACxC,KACH,cAAC,IAAK+B,QAAN,CACIO,GAAG,WAEHL,KAAK,YAELM,SAAUhB,EAEViB,OAAQhB,EAERU,MAAOrB,EAAOb,UAEd2B,UAAWN,EAAQrB,WAAaoB,EAAOpB,UAAY,QAAU,eAK7E,eAAC,KAAD,CAAM2B,UAAU,aAAhB,UACI,cAAC,IAAD,UACI,eAAC,IAAKC,MAAN,CAAYC,UAAU,sBAAtB,UACI,cAAC,IAAKC,MAAN,+BACA,cAAC,IAAKC,QAAN,CACIC,KAAK,OACLC,KAAK,kBACLQ,YAAY,0BACZF,SAAUhB,EACViB,OAAQhB,EACRU,MAAOrB,EAAO4C,uBAI1B,cAAC,IAAD,UACI,eAAC,IAAK7B,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAAC,IAAKC,MAAN,CAAYH,UAAU,aAAtB,4BACA,eAAC,IAAKI,QAAN,CACIO,GAAG,SAEHL,KAAK,gBAELM,SAAUhB,EAEViB,OAAQhB,EAERU,MAAOrB,EAAO6C,cATlB,UAWI,2BACA,wBAAQxB,MAAM,kBAAd,6BACA,wBAAQA,MAAM,kBAAd,6BACA,wBAAQA,MAAM,kBAAd,6BACA,wBAAQA,MAAM,iBAAd,4BACA,wBAAQA,MAAM,iBAAd,4BACA,wBAAQA,MAAM,iBAAd,4BACA,wBAAQA,MAAM,kBAAd,6BACA,wBAAQA,MAAM,kBAAd,6BACA,wBAAQA,MAAM,kBAAd,wCAKhB,eAAC,KAAD,CAAMP,UAAU,aAAhB,UACI,cAAC,IAAD,UACK,eAAC,IAAKC,MAAN,CAAYC,UAAU,eAAtB,UACG,cAAC,IAAKC,MAAN,wBACA,cAAC,IAAKC,QAAN,CACIO,GAAG,WACHL,KAAK,UACLQ,YAAY,gBACZF,SAAUhB,EACViB,OAAQhB,EACRU,MAAOrB,EAAOZ,eAI1B,cAAC,IAAD,CAAMG,GAAG,OAAT,SACI,eAAC,IAAKwB,MAAN,CAAYC,UAAU,YAAtB,UACI,cAAC,IAAKC,MAAN,2BACA,cAAC,IAAKC,QAAN,CACIC,KAAK,OACLC,KAAK,QACLQ,YAAY,YACZF,SAAUhB,EACViB,OAAQhB,EACRU,MAAOrB,EAAO8C,aAI1B,cAAC,IAAD,CAAMvD,GAAG,OAAT,SACI,eAAC,IAAKwB,MAAN,CAAYC,UAAU,mBAAtB,UACI,cAAC,IAAKC,MAAN,+BACA,cAAC,IAAKC,QAAN,CACIC,KAAK,OACLC,KAAK,eACLQ,YAAY,qBACZF,SAAUhB,EACViB,OAAQhB,EACRU,MAAOrB,EAAO+C,uBAK9B,cAAC,KAAD,CAAMjC,UAAU,aAAhB,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAQkC,MAAO,CAACC,MAAM,SAAUC,QAAQ,UAAU/B,KAAK,SAASK,SAAUX,EAA1E,2C","file":"static/js/105.59ecd610.chunk.js","sourcesContent":["import React from \"react\";\r\nimport CIcon from '@coreui/icons-react';\r\nimport { CButton, CButtonGroup,\r\n         CCollapse,\r\n         CCard,\r\n         CCardBody,\r\n         CCardFooter,\r\n         CCardHeader,\r\n         CCol, \r\n         CFormGroup,\r\n         CLabel, CListGroup, CListGroupItem,\r\n         CSelect, CContainer, CRow, CWidgetIcon } from '@coreui/react';\r\nimport \"./cdf.scss\";\r\nimport moment from \"moment\";\r\nimport styled from \"styled-components\";\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { Formik, useField } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\n\r\n\r\nconst CONTAINER = styled.div`\r\n    // background: #F7F9FA;\r\n    height: auto;\r\n    width: auto;\r\n    // margin: 5em auto;\r\n    // -webkit-box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.4);\r\n    // -moz-box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.4);\r\n    // box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.4);\r\n    \r\n    label {\r\n        // color: #24B9B6;\r\n        font-size: 1.1em;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .form-group {\r\n        margin-bottom: 1.2em;\r\n    }\r\n\r\n    .error {\r\n        border: 2px solid #FF6565;\r\n    }\r\n\r\n    .error-message {\r\n        color: #FF6565;\r\n        float: right;\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nfunction getCurrentDateTime() {\r\n    let curdatetime = moment().format(\"MM/DD/YYYY hh:mm:ss\");\r\n    return curdatetime;\r\n};\r\n\r\nfunction validateAddress(e, setFieldValue) {\r\n    if (typeof e.target.value !== \"undefined\") {\r\n        if (e.target.value.trim() !== '') {\r\n            axios.get(\r\n                'https://testgis.lacitysan.org/server/rest/services/BOELocatorReplication/BOEPoints_CAMsLACityStreets_Locator_V01/GeocodeServer/findAddressCandidates?Address=' + e.target.value + '&outFields=LASAN_YARD+%2C+Refuse_Collection_Day&f=pjson'\r\n            ).then((response) => {\r\n                console.log(JSON.stringify(response));\r\n                setFieldValue(\"district\", response.data.candidates[0].attributes.LASAN_YARD);\r\n                setFieldValue(\"collectionday\", response.data.candidates[0].attributes.Refuse_Collection_Day);\r\n            });\r\n        }        \r\n    }        \r\n}\r\n\r\n// RegEx for phone number validation\r\nconst phoneRegExp = /^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/\r\n\r\n// Schema for yup\r\nconst formValidationSchema = Yup.object().shape({\r\n    srtype: Yup.string()\r\n        .required(\"*Please select a SR Type\"),    \r\n    namefirst: Yup.string()\r\n        .min(2, \"*First Name must have at least 2 characters\")\r\n        .max(100, \"*First Name can't be longer than 100 characters\")\r\n        .required(\"*First Name is required\"),\r\n    namelast: Yup.string()\r\n        .min(2, \"*Last Name must have at least 2 characters\")\r\n        .max(100, \"*Last Name can't be longer than 100 characters\")\r\n        .required(\"*Last Name is required\"),\r\n    email: Yup.string()\r\n        .email(\"*Must be a valid email address\")\r\n        .max(100, \"*Email must be less than 100 characters\")\r\n        .required(\"*Email is required\"),\r\n    address: Yup.string()\r\n        .min(10, \"*Address must have at least 10 characters\")\r\n        .required(\"*Address is required\"),\r\n        // .test('AddressValidation', \r\n        //       'This is not a valid address',\r\n        //       async (address) => { \r\n        //         const { data: { resp } } = await axios.get(\r\n        //             'https://testgis.lacitysan.org/server/rest/services/BOELocatorReplication/BOEPoints_CAMsLACityStreets_Locator_V01/GeocodeServer/findAddressCandidates?Address=' + address + '&outFields=LASAN_YARD+%2C+Refuse_Collection_Day&f=pjson'\r\n        //         );      \r\n        //         console.log(resp);\r\n        //       } \r\n        // ),\r\n    phone: Yup.string()\r\n        .matches(phoneRegExp, \"*Phone number is not valid\")\r\n        .required(\"*Phone number required\"),\r\n    itemlocation: Yup.string()\r\n        .required(\"*Please select a location for the item\"),\r\n    itemslist: Yup.string()\r\n        .min(2, \"*Items must have at least 2 characters\")\r\n        .required(\"*Please type in the items to be picked up\"),\r\n    comment: Yup.string()\r\n        .url(\"*Must enter URL in http://www.example.com format\")\r\n        .required(\"*URL required\")\r\n});\r\n\r\n\r\nconst CDF = () => {\r\n    return (\r\n        <CONTAINER> \r\n            <CRow>\r\n                <CCol md=\"12\">\r\n                    <CCard accentColor=\"primary\">\r\n                        <CCardHeader>\r\n                            <h4>MyLA311 - Computer Down Form</h4>\r\n                        </CCardHeader>\r\n                        <CCardBody>\r\n                            <Formik\r\n                                initialValues={{ creationdate: \"\", billing: \"\", namelast:\"\", namefirst:\"\", \r\n                                                 email:\"\", address:\"\", district:\"\", collectionday:\"\", \r\n                                                 phone:\"\", itemlocation:\"\", itemslist:\"\", comment:\"\"}}\r\n                                validationSchema={formValidationSchema}\r\n                                onSubmit={(values, {setSubmitting, resetForm}) => {\r\n                                    // When button submits form and form is in the process of submitting, submit button is disabled\r\n                                    setSubmitting(true);\r\n\r\n                                    // Simulate submitting to database, shows us values submitted, resets form\r\n                                    setTimeout(() => {\r\n                                        alert(JSON.stringify(values, null, 2));\r\n                                        resetForm();\r\n                                        setSubmitting(false);\r\n                                    }, 500);\r\n                                }}\r\n                            >\r\n                                {/* Callback function containing Formik state and helpers that handle common form actions */}\r\n                                {( {values,\r\n                                    errors,\r\n                                    touched,\r\n                                    setFieldValue,\r\n                                    handleChange,\r\n                                    handleBlur,\r\n                                    handleSubmit,\r\n                                    isSubmitting }) => (\r\n                                    <Form onSubmit={handleSubmit}>\r\n                                        {JSON.stringify(values)}\r\n                                        <CRow className=\"form-group\">\r\n                                            <CCol>\r\n                                                <Form.Group controlId=\"formCreateDate\">\r\n                                                    <Form.Label className=\"labelStyle\">Date</Form.Label>\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        name=\"creationDate\"\r\n                                                        value={values.creationdate = getCurrentDateTime()} \r\n                                                        disabled />\r\n                                                </Form.Group>\r\n                                            </CCol>\r\n                                            <CCol>\r\n                                                <Form.Group controlId=\"formSRType\">\r\n                                                    <Form.Label className=\"labelStyle\">\r\n                                                        SR Type                                                        \r\n                                                    </Form.Label>\r\n                                                    {/* Applies the proper error message from validateSchema when the user has clicked the element and there is an error, also applies the .error-message CSS class for styling */}\r\n                                                    {touched.srtype && errors.srtype ? \r\n                                                        <div className=\"error-message\">{errors.srtype}</div>\r\n                                                    : null}                                                                                                    \r\n                                                    <Form.Control\r\n                                                        as=\"select\"\r\n                                                        /* This name property is used to access the value of the form element via values.nameOfElement */\r\n                                                        name=\"srtype\"\r\n                                                        /* Set onChange to handleChange */\r\n                                                        onChange={handleChange}\r\n                                                        /* Set onBlur to handleBlur */\r\n                                                        onBlur={handleBlur}\r\n                                                        /* Store the value of this input in values.name, make sure this is named the same as the name property on the form element */\r\n                                                        value={values.srtype}\r\n                                                        /* Check if the name field (this field) has been touched and if there is an error, if so add the .error class styles defined in the CSS (make the input box red) */\r\n                                                        className={touched.srtype && errors.srtype ? \"error\" : null}\r\n                                                    >\r\n                                                        <option></option>\r\n                                                        <option value=\"Brush\">Brush</option>\r\n                                                        <option value=\"Bulky\">Bulky</option>\r\n                                                        <option value=\"Container\">Containers</option>\r\n                                                        <option value=\"DAR\">DAR</option>\r\n                                                        <option value=\"Ewaste\">Ewaste</option>\r\n                                                        <option value=\"Franchise\">Franchise</option>\r\n                                                        <option value=\"Illegal Dumping Pickup\">Illegal Dumping Pickup</option>\r\n                                                        <option value=\"Info Only\">Info Only</option>\r\n                                                        <option value=\"MHA\">MHA</option>\r\n                                                        <option value=\"Move In Move Out\">Move In Move Out</option>\r\n                                                        <option value=\"Public Receptacles\">Public Receptacles</option>\r\n                                                        <option value=\"SNC\">SNC</option>\r\n                                                    </Form.Control>                                                    \r\n                                                </Form.Group>\r\n                                            </CCol>\r\n                                            <CCol>\r\n                                                <Form.Group controlId=\"formBilling\">\r\n                                                <Form.Label className=\"labelStyle\">Billing</Form.Label>\r\n                                                <Form.Control\r\n                                                        as=\"select\"\r\n                                                        /* This name property is used to access the value of the form element via values.nameOfElement */\r\n                                                        name=\"billing\"\r\n                                                        /* Set onChange to handleChange */\r\n                                                        onChange={handleChange}\r\n                                                        /* Set onBlur to handleBlur */\r\n                                                        onBlur={handleBlur}\r\n                                                        /* Store the value of this input in values.name, make sure this is named the same as the name property on the form element */\r\n                                                        value={values.billing}\r\n                                                    >\r\n                                                        <option></option>\r\n                                                        <option value=\"No ECC\">No ECC</option>\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n                                            </CCol>\r\n                                        </CRow>                                        \r\n                                        <CRow className=\"form-group\">\r\n                                            <CCol>\r\n                                                <Form.Group controlId=\"formNameFirst\">\r\n                                                    <Form.Label>Resident First Name</Form.Label>\r\n                                                    {/* Applies the proper error message from validateSchema when the user has clicked the element and there is an error, also applies the .error-message CSS class for styling */}\r\n                                                    {touched.namefirst && errors.namefirst ? (\r\n                                                        <div className=\"error-message\">{errors.namefirst}</div>\r\n                                                    ): null}\r\n                                                    <Form.Control\r\n                                                        value={values.namefirst}\r\n                                                        type=\"text\"\r\n                                                        /* This name property is used to access the value of the form element via values.nameOfElement */\r\n                                                        name=\"namefirst\"\r\n                                                        placeholder=\"First Name\"\r\n                                                        /* Set onChange to handleChange */\r\n                                                        onChange={handleChange}\r\n                                                        /* Set onBlur to handleBlur */\r\n                                                        onBlur={handleBlur}\r\n                                                        /* Store the value of this input in values.name, make sure this is named the same as the name property on the form element */\r\n                                                        /* Check if the name field (this field) has been touched and if there is an error, if so add the .error class styles defined in the CSS (make the input box red) */\r\n                                                        className={touched.namefirst && errors.namefirst ? \"error\" : null}\r\n                                                    />                                                    \r\n                                                </Form.Group>\r\n                                            </CCol>\r\n                                            <CCol>\r\n                                                <Form.Group controlId=\"formNameLast\">\r\n                                                    <Form.Label>Resident Last Name</Form.Label>\r\n                                                    {/* Applies the proper error message from validateSchema when the user has clicked the element and there is an error, also applies the .error-message CSS class for styling */}\r\n                                                    {touched.namelast && errors.namelast ? (\r\n                                                        <div className=\"error-message\">{errors.namelast}</div>\r\n                                                    ): null}\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        /* This name property is used to access the value of the form element via values.nameOfElement */\r\n                                                        name=\"namelast\"\r\n                                                        placeholder=\"Last Name\"\r\n                                                        /* Set onChange to handleChange */\r\n                                                        onChange={handleChange}\r\n                                                        /* Set onBlur to handleBlur */\r\n                                                        onBlur={handleBlur}\r\n                                                        /* Store the value of this input in values.name, make sure this is named the same as the name property on the form element */\r\n                                                        value={values.namelast}\r\n                                                        /* Check if the name field (this field) has been touched and if there is an error, if so add the .error class styles defined in the CSS (make the input box red) */\r\n                                                        className={touched.namelast && errors.namelast ? \"error\" : null}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            </CCol>                                    \r\n                                        </CRow>                                        \r\n                                        <CRow className=\"form-group\">\r\n                                            <CCol>\r\n                                                <Form.Group controlId=\"formEmail\">\r\n                                                    <Form.Label>Resident Email</Form.Label>\r\n                                                    {touched.email && errors.email ? (\r\n                                                        <div className=\"error-message\">{errors.email}</div>\r\n                                                    ): null}\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        name=\"email\"\r\n                                                        placeholder=\"Email\"\r\n                                                        onChange={handleChange}\r\n                                                        onBlur={handleBlur}\r\n                                                        value={values.email}\r\n                                                        className={touched.email && errors.email ? \"error\" : null}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            </CCol>\r\n                                            <CCol>      \r\n                                                <Form.Group controlId=\"formPhone\">\r\n                                                    <Form.Label>Resident Phone</Form.Label>\r\n                                                    {touched.phone && errors.phone ? (\r\n                                                        <div className=\"error-message\">{errors.phone}</div>\r\n                                                    ): null} \r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        name=\"phone\"\r\n                                                        placeholder=\"Phone\"\r\n                                                        onChange={handleChange}\r\n                                                        onBlur={handleBlur}\r\n                                                        value={values.phone}                                                        \r\n                                                        className={touched.phone && errors.phone ? \"error\" : null}\r\n                                                    />                                                                                                    \r\n                                                </Form.Group>\r\n                                            </CCol>\r\n                                        </CRow>                                        \r\n                                        <CRow className=\"form-group\">\r\n                                            <CCol>\r\n                                                <Form.Group controlId=\"formBlog\">\r\n                                                    <Form.Label>Resident Address</Form.Label>\r\n                                                    {touched.address && errors.address ? (\r\n                                                        <div className=\"error-message\">{errors.address}</div>\r\n                                                    ): null}\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        name=\"address\"\r\n                                                        placeholder=\"Address\"\r\n                                                        onChange={handleChange}\r\n                                                        onBlur={e => {\r\n                                                            handleBlur(e);\r\n                                                            validateAddress(e, setFieldValue);\r\n                                                        }} \r\n                                                        value={values.address}\r\n                                                        className={touched.address && errors.address ? \"error\" : null}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            </CCol>\r\n                                        </CRow>\r\n                                        <CRow className=\"form-group\">\r\n                                            <CCol>\r\n                                                <Form.Group controlId=\"formDistrict\">\r\n                                                    <Form.Label className=\"labelStyle\">District</Form.Label>\r\n                                                    <Form.Control name=\"district\" value={values.district} disabled />\r\n                                                </Form.Group>\r\n                                            </CCol>\r\n                                            <CCol>\r\n                                                <Form.Group controlId=\"formCollectionDay\">\r\n                                                    <Form.Label className=\"labelStyle\">Collection Day</Form.Label>\r\n                                                    <Form.Control name=\"collectionday\" value={values.collectionday} disabled />\r\n                                                </Form.Group>\r\n                                            </CCol>\r\n                                        </CRow>                                 \r\n                                        <CRow className=\"form-group\">\r\n                                            <CCol>\r\n                                                <Form.Group controlId=\"formItemLocation\">\r\n                                                    <Form.Label className=\"labelStyle\">Item Location</Form.Label>\r\n                                                    {/* Applies the proper error message from validateSchema when the user has clicked the element and there is an error, also applies the .error-message CSS class for styling */}\r\n                                                    {touched.itemlocation && errors.itemlocation ? (\r\n                                                        <div className=\"error-message\">{errors.itemlocation}</div>\r\n                                                    ): null}                                                    \r\n                                                    <Form.Control\r\n                                                        as=\"select\"\r\n                                                        /* This name property is used to access the value of the form element via values.nameOfElement */\r\n                                                        name=\"itemlocation\"\r\n                                                        /* Set onChange to handleChange */\r\n                                                        onChange={handleChange}\r\n                                                        /* Set onBlur to handleBlur */\r\n                                                        onBlur={handleBlur}\r\n                                                        /* Store the value of this input in values.name, make sure this is named the same as the name property on the form element */\r\n                                                        value={values.itemlocation}\r\n                                                        /* Check if the name field (this field) has been touched and if there is an error, if so add the .error class styles defined in the CSS (make the input box red) */\r\n                                                        className={touched.itemlocation && errors.itemlocation ? \"error\" : null}\r\n                                                    >\r\n                                                        <option></option>\r\n                                                        <option value=\"Alley\">Alley</option>\r\n                                                        <option value=\"Curb\">Curb</option>\r\n                                                        <option value=\"Side Street\">Side Street</option>\r\n                                                        <option value=\"Street\">Street</option>\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n                                            </CCol>\r\n                                            <CCol>\r\n                                                <Form.Group controlId=\"formItemslist\">\r\n                                                    <Form.Label className=\"labelStyle\">Items To Be Picked Up</Form.Label>\r\n                                                    {touched.itemslist && errors.itemslist ? (\r\n                                                        <div className=\"error-message\">{errors.itemslist}</div>\r\n                                                    ): null}\r\n                                                    <Form.Control\r\n                                                        as=\"textarea\"\r\n                                                        /* This name property is used to access the value of the form element via values.nameOfElement */\r\n                                                        name=\"itemslist\"\r\n                                                        /* Set onChange to handleChange */\r\n                                                        onChange={handleChange}\r\n                                                        /* Set onBlur to handleBlur */\r\n                                                        onBlur={handleBlur}\r\n                                                        /* Store the value of this input in values.name, make sure this is named the same as the name property on the form element */\r\n                                                        value={values.itemslist}\r\n                                                        /* Check if the name field (this field) has been touched and if there is an error, if so add the .error class styles defined in the CSS (make the input box red) */\r\n                                                        className={touched.itemslist && errors.itemslist ? \"error\" : null}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            </CCol>\r\n                                        </CRow>\r\n                                        <CRow className=\"form-group\">\r\n                                            <CCol>\r\n                                                <Form.Group controlId=\"formContainerSerial\">\r\n                                                    <Form.Label>Container Serial</Form.Label>\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        name=\"containerserial\"\r\n                                                        placeholder=\"Container Serial Number\"\r\n                                                        onChange={handleChange}\r\n                                                        onBlur={handleBlur}\r\n                                                        value={values.containerserial}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            </CCol>\r\n                                            <CCol>\r\n                                                <Form.Group controlId=\"formContainerSize\">\r\n                                                    <Form.Label className=\"labelStyle\">Container Size</Form.Label>                                                    \r\n                                                    <Form.Control\r\n                                                        as=\"select\"\r\n                                                        /* This name property is used to access the value of the form element via values.nameOfElement */\r\n                                                        name=\"containersize\"\r\n                                                        /* Set onChange to handleChange */\r\n                                                        onChange={handleChange}\r\n                                                        /* Set onBlur to handleBlur */\r\n                                                        onBlur={handleBlur}\r\n                                                        /* Store the value of this input in values.name, make sure this is named the same as the name property on the form element */\r\n                                                        value={values.containersize}\r\n                                                    >\r\n                                                        <option></option>\r\n                                                        <option value=\"Black 30 Gallon\">Black 30 Gallon</option>\r\n                                                        <option value=\"Black 60 Gallon\">Black 60 Gallon</option>\r\n                                                        <option value=\"Black 90 Gallon\">Black 60 Gallon</option>\r\n                                                        <option value=\"Blue 30 Gallon\">Blue 30 Gallon</option>\r\n                                                        <option value=\"Blue 60 Gallon\">Blue 60 Gallon</option>\r\n                                                        <option value=\"Blue 90 Gallon\">Blue 60 Gallon</option>\r\n                                                        <option value=\"Green 30 Gallon\">Green 30 Gallon</option>\r\n                                                        <option value=\"Green 60 Gallon\">Green 60 Gallon</option>\r\n                                                        <option value=\"Green 90 Gallon\">Green 60 Gallon</option>\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n                                            </CCol>\r\n                                        </CRow>\r\n                                        <CRow className=\"form-group\">\r\n                                            <CCol>\r\n                                                 <Form.Group controlId=\"formComments\">\r\n                                                    <Form.Label>Comment :</Form.Label>\r\n                                                    <Form.Control\r\n                                                        as=\"textarea\"\r\n                                                        name=\"comment\"\r\n                                                        placeholder=\"Agent Comment\"\r\n                                                        onChange={handleChange}\r\n                                                        onBlur={handleBlur}\r\n                                                        value={values.comment}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            </CCol>                                            \r\n                                            <CCol md=\"auto\">\r\n                                                <Form.Group controlId=\"formSRNum\">\r\n                                                    <Form.Label>SR Reference</Form.Label>\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        name=\"srnum\"\r\n                                                        placeholder=\"SR Number\"\r\n                                                        onChange={handleChange}\r\n                                                        onBlur={handleBlur}\r\n                                                        value={values.srnum}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            </CCol>\r\n                                            <CCol md=\"auto\">\r\n                                                <Form.Group controlId=\"formAgentForward\">\r\n                                                    <Form.Label>Agent Forward To</Form.Label>\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        name=\"agentforward\"\r\n                                                        placeholder=\"Agent Forwarded To\"\r\n                                                        onChange={handleChange}\r\n                                                        onBlur={handleBlur}\r\n                                                        value={values.agentforward}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            </CCol>\r\n                                        </CRow>                                                                               \r\n                                        <CRow className=\"form-group\">\r\n                                            <CCol>\r\n                                                <Button style={{float:'right'}} variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\r\n                                                    Submit\r\n                                                </Button>\r\n                                            </CCol>\r\n                                        </CRow>\r\n                                    </Form>\r\n                                )}\r\n                            </Formik>\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n            </CRow>       \r\n                \r\n        </CONTAINER>\r\n      );\r\n};\r\n\r\nexport default CDF;"],"sourceRoot":""}